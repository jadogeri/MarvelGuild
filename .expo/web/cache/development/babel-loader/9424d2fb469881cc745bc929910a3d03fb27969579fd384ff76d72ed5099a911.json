{"ast":null,"code":"export var battleHandler = function battleHandler(hero, display, stageLevel) {\n  var answer = questVerdict(hero.level, stageLevel);\n  display.roundVerdict = answer;\n  console.log('round verdict is ' + display.roundVerdict);\n  display.goldDifference = generateGoldDifference(hero.level, stageLevel, hero.power, answer);\n  display.healthDifference = generateHealthDifference(hero.level, stageLevel, hero.power, answer);\n  display.newGold = hero.gold + display.goldDifference;\n  display.newHealth = hero.currentHealth + display.healthDifference;\n  console.log('line 95 adventure screen');\n  console.log(JSON.stringify(display.roundVerdict));\n  if (hero.maxHealth < display.newHealth) {\n    display.newHealth = hero.maxHealth;\n  }\n};","map":{"version":3,"names":["battleHandler","hero","display","stageLevel","answer","questVerdict","level","roundVerdict","console","log","goldDifference","generateGoldDifference","power","healthDifference","generateHealthDifference","newGold","gold","newHealth","currentHealth","JSON","stringify","maxHealth"],"sources":["C:/Users/joseph.adogeri/Desktop/Source/MarvelGuild/src/utils/battleHandler.js"],"sourcesContent":["export const battleHandler = (hero, display, stageLevel) => {\r\n   \r\n\r\n    //checking to see if battle was a success or failur\r\n    let answer = questVerdict(hero.level, stageLevel)\r\n    display.roundVerdict = answer\r\n    console.log('round verdict is ' + display.roundVerdict);\r\n\r\n    display.goldDifference = generateGoldDifference(hero.level, stageLevel, hero.power, answer)\r\n    display.healthDifference = generateHealthDifference(hero.level, stageLevel, hero.power, answer)\r\n\r\n    display.newGold = hero.gold + display.goldDifference\r\n    display.newHealth = hero.currentHealth + display.healthDifference\r\n\r\n    console.log('line 95 adventure screen');\r\n    console.log(JSON.stringify(display.roundVerdict))    \r\n\r\n    if (hero.maxHealth < display.newHealth) {\r\n        display.newHealth = hero.maxHealth\r\n    } \r\n\r\n}\r\n"],"mappings":"AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,IAAI,EAAEC,OAAO,EAAEC,UAAU,EAAK;EAIxD,IAAIC,MAAM,GAAGC,YAAY,CAACJ,IAAI,CAACK,KAAK,EAAEH,UAAU,CAAC;EACjDD,OAAO,CAACK,YAAY,GAAGH,MAAM;EAC7BI,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGP,OAAO,CAACK,YAAY,CAAC;EAEvDL,OAAO,CAACQ,cAAc,GAAGC,sBAAsB,CAACV,IAAI,CAACK,KAAK,EAAEH,UAAU,EAAEF,IAAI,CAACW,KAAK,EAAER,MAAM,CAAC;EAC3FF,OAAO,CAACW,gBAAgB,GAAGC,wBAAwB,CAACb,IAAI,CAACK,KAAK,EAAEH,UAAU,EAAEF,IAAI,CAACW,KAAK,EAAER,MAAM,CAAC;EAE/FF,OAAO,CAACa,OAAO,GAAGd,IAAI,CAACe,IAAI,GAAGd,OAAO,CAACQ,cAAc;EACpDR,OAAO,CAACe,SAAS,GAAGhB,IAAI,CAACiB,aAAa,GAAGhB,OAAO,CAACW,gBAAgB;EAEjEL,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACvCD,OAAO,CAACC,GAAG,CAACU,IAAI,CAACC,SAAS,CAAClB,OAAO,CAACK,YAAY,CAAC,CAAC;EAEjD,IAAIN,IAAI,CAACoB,SAAS,GAAGnB,OAAO,CAACe,SAAS,EAAE;IACpCf,OAAO,CAACe,SAAS,GAAGhB,IAAI,CAACoB,SAAS;EACtC;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}