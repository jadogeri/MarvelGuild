{"ast":null,"code":"import { questVerdict } from \"../utils/questVerdict\";\nimport { generateGoldDifference } from \"../utils/generateGoldDifference\";\nimport { generateHealthDifference } from \"../utils/generateHealthDifference\";\nexport var battleHandler = function battleHandler(hero, display, stageLevel) {\n  var answer = questVerdict(hero.level, stageLevel);\n  display.roundVerdict = answer;\n  console.log('round verdict is ' + display.roundVerdict);\n  display.goldDifference = generateGoldDifference(hero.level, stageLevel, hero.power, answer);\n  display.healthDifference = generateHealthDifference(hero.level, stageLevel, hero.power, answer);\n  display.newGold = hero.gold + display.goldDifference;\n  display.newHealth = hero.currentHealth + display.healthDifference;\n  console.log('line 95 adventure screen');\n  console.log(JSON.stringify(display.roundVerdict));\n  if (hero.maxHealth < display.newHealth) {\n    display.newHealth = hero.maxHealth;\n  }\n};","map":{"version":3,"names":["questVerdict","generateGoldDifference","generateHealthDifference","battleHandler","hero","display","stageLevel","answer","level","roundVerdict","console","log","goldDifference","power","healthDifference","newGold","gold","newHealth","currentHealth","JSON","stringify","maxHealth"],"sources":["C:/Users/joseph.adogeri/Desktop/Source/MarvelGuild/src/utils/battleHandler.js"],"sourcesContent":["import { questVerdict } from \"../utils/questVerdict\"\r\nimport { generateGoldDifference } from \"../utils/generateGoldDifference\"\r\nimport { generateHealthDifference } from \"../utils/generateHealthDifference\"\r\n\r\nexport const battleHandler = (hero, display, stageLevel) => {\r\n   \r\n\r\n    //checking to see if battle was a success or failur\r\n    let answer = questVerdict(hero.level, stageLevel)\r\n    display.roundVerdict = answer\r\n    console.log('round verdict is ' + display.roundVerdict);\r\n\r\n    display.goldDifference = generateGoldDifference(hero.level, stageLevel, hero.power, answer)\r\n    display.healthDifference = generateHealthDifference(hero.level, stageLevel, hero.power, answer)\r\n\r\n    display.newGold = hero.gold + display.goldDifference\r\n    display.newHealth = hero.currentHealth + display.healthDifference\r\n\r\n    console.log('line 95 adventure screen');\r\n    console.log(JSON.stringify(display.roundVerdict))    \r\n\r\n    if (hero.maxHealth < display.newHealth) {\r\n        display.newHealth = hero.maxHealth\r\n    } \r\n\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAY;AACrB,SAASC,sBAAsB;AAC/B,SAASC,wBAAwB;AAEjC,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,IAAI,EAAEC,OAAO,EAAEC,UAAU,EAAK;EAIxD,IAAIC,MAAM,GAAGP,YAAY,CAACI,IAAI,CAACI,KAAK,EAAEF,UAAU,CAAC;EACjDD,OAAO,CAACI,YAAY,GAAGF,MAAM;EAC7BG,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGN,OAAO,CAACI,YAAY,CAAC;EAEvDJ,OAAO,CAACO,cAAc,GAAGX,sBAAsB,CAACG,IAAI,CAACI,KAAK,EAAEF,UAAU,EAAEF,IAAI,CAACS,KAAK,EAAEN,MAAM,CAAC;EAC3FF,OAAO,CAACS,gBAAgB,GAAGZ,wBAAwB,CAACE,IAAI,CAACI,KAAK,EAAEF,UAAU,EAAEF,IAAI,CAACS,KAAK,EAAEN,MAAM,CAAC;EAE/FF,OAAO,CAACU,OAAO,GAAGX,IAAI,CAACY,IAAI,GAAGX,OAAO,CAACO,cAAc;EACpDP,OAAO,CAACY,SAAS,GAAGb,IAAI,CAACc,aAAa,GAAGb,OAAO,CAACS,gBAAgB;EAEjEJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EACvCD,OAAO,CAACC,GAAG,CAACQ,IAAI,CAACC,SAAS,CAACf,OAAO,CAACI,YAAY,CAAC,CAAC;EAEjD,IAAIL,IAAI,CAACiB,SAAS,GAAGhB,OAAO,CAACY,SAAS,EAAE;IACpCZ,OAAO,CAACY,SAAS,GAAGb,IAAI,CAACiB,SAAS;EACtC;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}