{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar getHero = function getHero(dispatch) {\n  return function _callee() {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"about to make network request...?\");\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(jsonServer.get(\"/blogposts\"));\n          case 4:\n            response = _context.sent;\n            console.log(\"network request completed!!!\");\n            console.log(response.data);\n            dispatch({\n              type: 'get_blogposts',\n              payload: response.data\n            });\n            _context.next = 14;\n            break;\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(\"something went wrong...\");\n            console.log(_context.t0);\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  };\n};\nvar addHero = function addHero(dispatch) {\n  return function (name, level, power, maxHealth, currentHealth, gold, callback) {\n    dispatch({\n      type: 'add_Hero',\n      payload: {\n        name: name,\n        level: level,\n        power: power,\n        maxHealth: maxHealth,\n        currentHealth: currentHealth,\n        gold: gold,\n        callback: callback\n      }\n    });\n    if (callback) {\n      callback();\n    }\n  };\n};\nvar deleteHero = function deleteHero(dispatch) {\n  return function (id) {\n    dispatch({\n      type: 'delete_Hero',\n      payload: id\n    });\n  };\n};\nvar editHero = function editHero(dispatch) {\n  return function (id, name, level, power, maxHealth, currentHealth, gold, callback) {\n    dispatch({\n      type: 'edit_Hero',\n      payload: {\n        id: id,\n        name: name,\n        level: level,\n        power: power,\n        maxHealth: maxHealth,\n        currentHealth: currentHealth,\n        gold: gold\n      }\n    });\n    if (callback) callback();\n  };\n};\nexport default [addHero, editHero, deleteHero, getHero];","map":{"version":3,"names":["getHero","dispatch","_callee","response","_regeneratorRuntime","async","_callee$","_context","prev","next","console","log","awrap","jsonServer","get","sent","data","type","payload","t0","stop","Promise","addHero","name","level","power","maxHealth","currentHealth","gold","callback","deleteHero","id","editHero"],"sources":["C:/Users/joseph.adogeri/Desktop/Source/MarvelGuild/src/actions/heroActions.js"],"sourcesContent":["const getHero = dispatch => {\r\n    return async () => {\r\n        console.log(\"about to make network request...?\")\r\n        try {\r\n            const response = await jsonServer.get(\"/blogposts\");\r\n            console.log(\"network request completed!!!\");\r\n            //response.data === [{}, {}, {}]\r\n            console.log(response.data);\r\n            dispatch({ type: 'get_blogposts', payload: response.data })\r\n        }\r\n        catch (e) {\r\n            console.log(\"something went wrong...\")\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\nconst addHero = (dispatch) => {\r\n    return (name, level, power, maxHealth, currentHealth, gold, callback) => {\r\n        dispatch({\r\n            type: 'add_Hero',\r\n            payload: { name, level, power, maxHealth, currentHealth, gold, callback }\r\n        })\r\n\r\n        if (callback) {\r\n            callback();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst deleteHero = (dispatch) => {\r\n    return (id) => {\r\n        dispatch({ type: 'delete_Hero', payload: id })\r\n    }\r\n}\r\n\r\nconst editHero = (dispatch) => {\r\n    return  (id,name, level, power, maxHealth, currentHealth, gold, callback) => {\r\n        dispatch({ type: 'edit_Hero', payload: {id:id, name: name,level: level,\r\n                                                     power: power, maxHealth: maxHealth, \r\n                                                    currentHealth: currentHealth, gold: gold} })\r\n       if(callback)\r\n         callback();\r\n    }\r\n}\r\n\r\nexport default [addHero,editHero,deleteHero,getHero]"],"mappings":";AAAA,IAAMA,OAAO,GAAG,SAAVA,OAAOA,CAAGC,QAAQ,EAAI;EACxB,OAAO,SAAAC,QAAA;IAAA,IAAAC,QAAA;IAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACHC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;YAAAJ,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAE,IAAA;YAAA,OAAAL,mBAAA,CAAAQ,KAAA,CAErBC,UAAU,CAACC,GAAG,CAAC,YAAY,CAAC;UAAA;YAA7CX,QAAQ,GAAAI,QAAA,CAAAQ,IAAA;YACdL,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;YAE3CD,OAAO,CAACC,GAAG,CAACR,QAAQ,CAACa,IAAI,CAAC;YAC1Bf,QAAQ,CAAC;cAAEgB,IAAI,EAAE,eAAe;cAAEC,OAAO,EAAEf,QAAQ,CAACa;YAAK,CAAC,CAAC;YAAAT,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAY,EAAA,GAAAZ,QAAA;YAG3DG,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;YACtCD,OAAO,CAACC,GAAG,CAAAJ,QAAA,CAAAY,EAAE,CAAC;UAAC;UAAA;YAAA,OAAAZ,QAAA,CAAAa,IAAA;QAAA;MAAA;IAAA,0BAAAC,OAAA;EAAA,CAEtB;AACL,CAAC;AAED,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIrB,QAAQ,EAAK;EAC1B,OAAO,UAACsB,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,aAAa,EAAEC,IAAI,EAAEC,QAAQ,EAAK;IACrE5B,QAAQ,CAAC;MACLgB,IAAI,EAAE,UAAU;MAChBC,OAAO,EAAE;QAAEK,IAAI,EAAJA,IAAI;QAAEC,KAAK,EAALA,KAAK;QAAEC,KAAK,EAALA,KAAK;QAAEC,SAAS,EAATA,SAAS;QAAEC,aAAa,EAAbA,aAAa;QAAEC,IAAI,EAAJA,IAAI;QAAEC,QAAQ,EAARA;MAAS;IAC5E,CAAC,CAAC;IAEF,IAAIA,QAAQ,EAAE;MACVA,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC;AACL,CAAC;AAGD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAI7B,QAAQ,EAAK;EAC7B,OAAO,UAAC8B,EAAE,EAAK;IACX9B,QAAQ,CAAC;MAAEgB,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAEa;IAAG,CAAC,CAAC;EAClD,CAAC;AACL,CAAC;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAI/B,QAAQ,EAAK;EAC3B,OAAQ,UAAC8B,EAAE,EAACR,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,aAAa,EAAEC,IAAI,EAAEC,QAAQ,EAAK;IACzE5B,QAAQ,CAAC;MAAEgB,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAE;QAACa,EAAE,EAACA,EAAE;QAAER,IAAI,EAAEA,IAAI;QAACC,KAAK,EAAEA,KAAK;QACzBC,KAAK,EAAEA,KAAK;QAAEC,SAAS,EAAEA,SAAS;QACnCC,aAAa,EAAEA,aAAa;QAAEC,IAAI,EAAEA;MAAI;IAAE,CAAC,CAAC;IACzF,IAAGC,QAAQ,EACTA,QAAQ,CAAC,CAAC;EACf,CAAC;AACL,CAAC;AAED,eAAe,CAACP,OAAO,EAACU,QAAQ,EAACF,UAAU,EAAC9B,OAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}